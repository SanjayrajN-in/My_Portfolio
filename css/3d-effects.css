* Mobile-friendly 3D Effects and Animations CSS */

/* Card 3D Effect */
.card-3d {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    position: relative;
    overflow: hidden;
    transform: translateZ(0); /* Force hardware acceleration */
}

.card-3d::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 50%, rgba(255,255,255,0) 100%);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 2;
    pointer-events: none;
}

.card-3d:hover::before {
    opacity: 1;
}

/* Hover 3D Effect */
.hover-3d {
    transition: transform 0.3s ease;
    transform-style: preserve-3d;
    transform: perspective(1000px);
    will-change: transform;
}

/* Parallax Effects */
.parallax {
    transition: transform 0.1s ease-out;
    will-change: transform;
}

.scroll-parallax {
    transition: transform 0.1s ease-out;
    will-change: transform;
}

/* Floating Elements */
.floating {
    animation: floating 3s ease-in-out infinite alternate;
}

@keyframes floating {
    0% {
        transform: translateY(0);
    }
    100% {
        transform: translateY(10px);
    }
}

/* Scroll Animations */
.scroll-animate {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease, transform 0.6s ease;
}

.scroll-animate.in-view {
    opacity: 1;
    transform: translateY(0);
}

/* Glow Effect */
.glow-effect {
    position: relative;
    overflow: hidden;
}

.glow-effect::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(
        circle,
        rgba(0, 168, 255, 0.4) 0%,
        rgba(0, 168, 255, 0) 70%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
    z-index: 1;
}

.glow-effect:hover::after {
    opacity: 1;
}

/* Neon Text Effect */
.neon-text {
    color: var(--text-color);
    text-shadow: 0 0 5px rgba(0, 168, 255, 0.5),
                 0 0 10px rgba(0, 168, 255, 0.3);
    transition: text-shadow 0.3s ease;
}

.neon-text:hover {
    text-shadow: 0 0 5px rgba(0, 168, 255, 0.8),
                 0 0 10px rgba(0, 168, 255, 0.5),
                 0 0 15px rgba(0, 168, 255, 0.3);
}

/* Subtle Gradient Animation */
.gradient-bg {
    background: linear-gradient(-45deg, #1a1a2e, #16213e, #0f3460, #1a1a2e);
    background-size: 400% 400%;
    animation: gradientBG 15s ease infinite;
}

@keyframes gradientBG {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

/* Memory Game Styles */
.memory-game {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
    max-width: 600px;
    margin: 0 auto;
    perspective: 1000px;
}

.memory-card {
    height: 120px;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.5s;
    cursor: pointer;
}

@media (max-width: 600px) {
    .memory-game {
        grid-template-columns: repeat(3, 1fr);
    }
    
    .memory-card {
        height: 100px;
    }
}

@media (max-width: 400px) {
    .memory-game {
        grid-template-columns: repeat(2, 1fr);
    }
}

.memory-card.flipped {
    transform: rotateY(180deg);
}

.memory-card .front,
.memory-card .back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: var(--border-radius);
    display: flex;
    align-items: center;
    justify-content: center;
}

.memory-card .front {
    background: var(--card-bg);
    transform: rotateY(180deg);
    border: 2px solid var(--primary-color);
}

.memory-card .back {
    background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
    font-size: 2rem;
    color: white;
}

.memory-card .front img {
    max-width: 80%;
    max-height: 80%;
}

.game-controls {
    display: flex;
    justify-content: center;
    margin: 20px 0;
}

.reset-game {
    padding: 10px 20px;
    background: var(--primary-color);
    color: white;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: var(--transition);
}

.reset-game:hover {
    background: var(--accent-color);
    transform: translateY(-3px);
}

/* Snake Game Styles */
.snake-game-container {
    max-width: 500px;
    margin: 0 auto;
}

.snake-game {
    position: relative;
    width: 100%;
    margin: 0 auto;
    border-radius: var(--border-radius);
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.snake-game canvas {
    display: block;
    background: #1a1a2e;
}

.game-controls {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 20px;
}

.control-row {
    display: flex;
    gap: 10px;
    margin-bottom: 10px;
}

.control-btn {
    width: 60px;
    height: 60px;
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    color: var(--text-color);
    cursor: pointer;
    transition: var(--transition);
}

.control-btn:hover {
    background: var(--primary-color);
    color: white;
}

.control-btn:active {
    transform: scale(0.95);
}

/* Tic Tac Toe Styles */
.tictactoe-game {
    max-width: 300px;
    margin: 0 auto;
}

.tictactoe-board {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 10px;
    margin-bottom: 20px;
}

.cell {
    height: 80px;
    background: var(--card-bg);
    border: 2px solid var(--border-color);
    border-radius: var(--border-radius);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    font-weight: bold;
    cursor: pointer;
    transition: var(--transition);
}

.cell:hover {
    background: var(--card-bg-hover);
}

.cell.x {
    color: #00a8ff;
}

.cell.o {
    color: #ff5252;
}

.cell.win {
    background: rgba(0, 168, 255, 0.2);
    animation: pulse 1s infinite;
}

@keyframes pulse {
    0% {
        box-shadow: 0 0 0 0 rgba(0, 168, 255, 0.4);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(0, 168, 255, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(0, 168, 255, 0);
    }
}

.game-status {
    text-align: center;
    margin-bottom: 20px;
    font-size: 1.2rem;
    min-height: 30px;
}

.restart-game {
    display: block;
    width: 100%;
    padding: 10px;
    background: var(--primary-color);
    color: white;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: var(--transition);
}

.restart-game:hover {
    background: var(--accent-color);
    transform: translateY(-3px);
}

/* Responsive Styles */
@media (max-width: 768px) {
    .control-btn {
        width: 50px;
        height: 50px;
        font-size: 1.2rem;
    }
    
    .cell {
        height: 70px;
        font-size: 1.8rem;
    }
}

@media (max-width: 480px) {
    .control-btn {
        width: 40px;
        height: 40px;
        font-size: 1rem;
    }
    
    .cell {
        height: 60px;
        font-size: 1.5rem;
    }
}